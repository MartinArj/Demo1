-- Create Class table
CREATE TABLE Class (
    Class INT PRIMARY KEY CONSTRAINT chk_class CHECK (Class <= 12)
);
INSERT INTO Class (Class)
VALUES (1), (2), (3), (4), (5), (6), (7), (8), (9), (10);

-- Create ExamType table
CREATE TABLE ExamType (
    ExamId INT NOT NULL IDENTITY(1,1) UNIQUE,
    Class INT FOREIGN KEY REFERENCES Class(Class),
    ExamType VARCHAR(25) NOT NULL,
    MaxMark FLOAT,
    PRIMARY KEY (Class, ExamType, MaxMark)
);

-- Create StudDetails table
CREATE TABLE StudDetails (
    StudId INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
    Class INT NOT NULL,
    Section VARCHAR(2) NOT NULL,
    Year VARCHAR(4) NOT NULL,
    Name VARCHAR(25) NOT NULL,
    DateOfBirth VARCHAR(10) NOT NULL,
    Blood_Group VARCHAR(3),
    IsActive BIT DEFAULT 1
);

-- Create _Address table
CREATE TABLE _Address (
    StudId INT FOREIGN KEY REFERENCES StudDetails(StudId) PRIMARY KEY,
    DoorNo VARCHAR(5) NOT NULL,
    Street VARCHAR(25) NOT NULL,
    Village VARCHAR(25) NOT NULL,
    City VARCHAR(20) NOT NULL,
    State VARCHAR(20) NOT NULL,
    Pin_Code VARCHAR(6) NOT NULL,
    Mobile_Number VARCHAR(13) NOT NULL,
    Mail_Id VARCHAR(50) NOT NULL
);

-- Create ClassDetails table
CREATE TABLE ClassDetails (
    Class INT,
    Section VARCHAR(2),
    PRIMARY KEY (Class, Section),
    IsActive BIT DEFAULT 1
);

-- Create StaffDetails table
CREATE TABLE StaffDetails (
    StaffId INT NOT NULL PRIMARY KEY IDENTITY(1,1),
    Name VARCHAR(25) NOT NULL,
    Dob VARCHAR(10),
    Qualification VARCHAR(25) NOT NULL,
    JoiningYear VARCHAR(10),
    PreviousExperience VARCHAR(2),
    Gender VARCHAR(10) not null,
    SubjectsTaught VARCHAR(50) not null ,
    UptoClass INT ,
    IsActive BIT DEFAULT 1
);

-- Create StaffMobile_Number table
CREATE TABLE StaffMobile_Number (
    StaffId INT NOT NULL FOREIGN KEY REFERENCES StaffDetails(StaffId),
    Mobile_Number VARCHAR(13),
    MType VARCHAR(10) NOT NULL,
    PRIMARY KEY (StaffId, Mobile_Number)
);

-- Create StaffAddress table
CREATE TABLE StaffAddress (
    StaffId INT NOT NULL FOREIGN KEY REFERENCES StaffDetails(StaffId),
    DoorNo VARCHAR(5) NOT NULL,
    Street VARCHAR(25) NOT NULL,
    Village VARCHAR(25) NOT NULL,
    City VARCHAR(20) NOT NULL,
    State VARCHAR(20) NOT NULL,
    Pin_Code VARCHAR(6) NOT NULL,
    Mail_Id VARCHAR(50) NOT NULL,
    AddressType BIT DEFAULT 1,
    PRIMARY KEY (StaffId, AddressType)
);

-- Create SubjectDetails table with IsActive column
CREATE TABLE SubjectDetails (
    SubjectId INT NOT NULL IDENTITY(1,1) UNIQUE,
    Class INT FOREIGN KEY REFERENCES Class(Class),
    SubjectName VARCHAR(20) NOT NULL,
    IsActive BIT DEFAULT 1,
    PRIMARY KEY (Class, SubjectName)
);

CREATE TABLE SubAndStaffRelation (
    SubjectId int FOREIGN KEY REFERENCES SubjectDetails(SubjectId),
    Class int,
    Section varchar(2),
    Year varchar(4),
    StaffId int FOREIGN KEY REFERENCES StaffDetails(StaffId),
    IsClassTeacher bit,
    PRIMARY KEY (StaffId, Class, Section, Year, SubjectId),
    FOREIGN KEY (Class, Section) REFERENCES ClassDetails(Class, Section)
);
-- Create classStud table
CREATE TABLE classStud (
    Year VARCHAR(4) NOT NULL,
    StudId INT NOT NULL FOREIGN KEY REFERENCES StudDetails(StudId),
    Class INT NOT NULL,
    Section VARCHAR(2),
    PRIMARY KEY (Year, StudId)
);
CREATE TABLE StudentMarks (
    StudId INT NOT NULL,
    Class INT NOT NULL,
    Section VARCHAR(2) NOT NULL,
    Year VARCHAR(4) NOT NULL,
    subjectname varchar(25),
      examtype varchar(25),
    Name VARCHAR(25),
    Mark FLOAT,
    PRIMARY KEY (StudId, Class, Section, Year, subjectname, examtype),
    FOREIGN KEY (StudId) REFERENCES studdetails(studid),
    
);
-- Select all records from Class table
SELECT * FROM Class;

-- Select all records from ExamType table
SELECT * FROM ExamType;

-- Select all records from StudDetails table
SELECT * FROM StudDetails;

-- Select all records from _Address table
SELECT * FROM _Address;

-- Select all records from ClassDetails table
SELECT * FROM ClassDetails;

-- Select all records from StaffDetails table
SELECT * FROM StaffDetails;

-- Select all records from StaffMobile_Number table
SELECT * FROM StaffMobile_Number;

-- Select all records from StaffAddress table
SELECT * FROM StaffAddress;

-- Select all records from SubjectDetails table
SELECT * FROM SubjectDetails;

-- Select all records from SubAndStaffRelation table
SELECT * FROM SubAndStaffRelation;

-- Select all records from classStud table
SELECT * FROM classStud;

-- Select all records from StudentMarks table
SELECT * FROM StudentMarks;


